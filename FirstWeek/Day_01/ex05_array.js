//하나의 변수에는 하나의 데이터밖에 저장하질 못한다.
//배열이라는 객체는 여러개의 데이터를 저장할 수 있으므로
//변수에 배열이라는 객체의 주소를 저장하고 배열에 여러개의 데이터를 저장하면
//결과적으로 변수에 여러개의 데이터를 담는 효과를 누릴 수 있다.
//하지만 명심해야 할것은 변수는 배열을 저장할 뿐이지 변수 = 배열이라는 착각을 해서는 안된다!

//배열을 담을 변수선언
var cityArray;

//변수에 객체를 저장한다는 것은 객체 자체를 저장하는 것이 아니라
//객체의 주소값을 저장하는 것이다.
//변수에 (텅텅빈)배열(리터럴)의 주소를 저장 --> 이것을 "변수가 객체를 참조한다"라고 한다
cityArray = [];

//배열이 객체인지 확인해볼까?
console.log(typeof cityArray);

//변수에 저장된 주소값으로 객체(배열)에 접근!
//객체에 push라는 함수를 사용
cityArray.push('서울');
cityArray.push('대전');
cityArray.push('대구');
cityArray.push('부산');

//배열에 저장되어있는 각 요소들은 고유한 index(인덱스)를 가지고 있어서
//배열의 각 요소에 접근할 때는 해당 index로 접근할 수 있다.
console.log(cityArray[0]);
console.log(cityArray[1]);
console.log(cityArray[2]);
console.log(cityArray[3]);

//배열에 저장된 요소의 갯수는 length라는 변수에 저장이 되어있다.
console.log(cityArray.length);

//배열을 null로 초기화 --> 주소값을 지움
cityArray = null;

//그렇기 때문에 아무런 객체도 참조하고 있지 않은 상황이라서
//console.log(cityArray[0]);
//이렇게 에러를 발생시킨다.

//좀더 간편한 방법을 사용해 보자!
//변수를 선언함과 동시에 데이터들이 저장된 배열객체의 주소값을 저장한다.
//모든것을 한줄에!
//변수에 여러가지 종류의 데이터를 저장하듯이 배열에도 모든 종류의 데이터를 동시에 저장할 수 있다.
//하지만 보통의 경우 한종류의 데이터만 여러개를 저장하는 목적으로 사용된다.
var everything = [100 ,'장동혁', {}, function(){}, [10, 44, 55]];
console.log('----------');
console.log(everything[0]);
console.log(everything[1]);
console.log(everything[2]);
console.log(everything[3]);
console.log(everything[4]);

//배열은 여러개의 데이터를 동시에 저장할 수 있다는 큰 장점이 있다.
//배열은 인덱스로 접근하며 0부터 차례대로 증가한다.


/*
  #실습#
  1.배열의 주소를 저장할 변수를 선언하시오.
  2.좋아하는 가수(그룹)의 이름을 저장할 배열을 만들고 이 배열의 주소값을 1에서 선언한 변수에 저장하시오.
  3.변수를 통해서 배열의 요소에 접근하여 모든 데이터를 출력하시오.(console.log());
*/
